"""Create a list representing 20 seats, numbered 1 to 20.
Display the list of available seats to the customer.
Prompt the customer to select a seat by entering its number. Entering '0' ends the purchase process.
Remove the selected seat from the list of available seats and display the updated list.
If the customer selects an invalid or already sold seat, display a friendly error message and prompt them to try again.
Ensure the program gracefully handles all scenarios and is user-friendly."""

def display_seats(seats):
    """Displays the available seats."""
    print("Available seats: ", [seat for seat in seats if seat != "sold"])

def select_seat(seats):
    """Prompts the customer to select a seat."""
    while True:
        try:
            seat_number = int(input("Please select a seat (1-20) or enter '0' to end: "))
            
            # If user enters 0, end the process
            if seat_number == 0:
                print("Thank you for visiting. Purchase process ended.")
                return None
            
            # If the seat number is out of range or already sold
            if seat_number < 1 or seat_number > 20:
                print("Invalid seat number. Please select a valid seat between 1 and 20.")
            elif seats[seat_number - 1] == "sold":
                print(f"Sorry, seat {seat_number} is already taken. Please choose another seat.")
            else:
                # Mark the seat as sold and break the loop
                seats[seat_number - 1] = "sold"
                print(f"Seat {seat_number} successfully booked!")
                return seat_number
        except ValueError:
            print("Please enter a valid number.")

def main():
    # Initialize list of seats, all seats are available initially
    seats = [i for i in range(1, 21)]

    print("Welcome to the seat booking system!")
    
    while True:
        # Display available seats to the customer
        display_seats(seats)
        
        # Prompt the customer to select a seat
        selected_seat = select_seat(seats)
        
        # If no seat is selected (i.e., customer entered '0'), exit the program
        if selected_seat is None:
            break

        # Display the updated list of available seats after a successful booking
        display_seats(seats)

if __name__ == "__main__":
    main()